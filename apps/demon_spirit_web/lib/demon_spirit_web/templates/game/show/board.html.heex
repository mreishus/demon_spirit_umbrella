<% game = @state.game %>
<% my_turn = @state[game.turn] == @guest %>

<%# Game Won Modal %>
<%= if game.winner != nil do %>
  <div class="absolute inset-0 w-full h-full z-2000 bg-black-60 text-white text-5xl xl:text-6xl winner_overlay">
    <div class="flex w-full h-full items-center">
      <div class="w-full">
        <center>
        <%= game.winner %> wins!
        </center>
        <div>
          <%= link "Back to Lobby", to: Routes.game_path(@socket, :index), class: "btn btn-primary" %>
        </div>
      </div>
    </div>
  </div>
<% end %>

<%# Move Clarification Modal %>
<%= if my_turn and needs_clarify?(@state)  do %>
  <div class="absolute inset-0 w-full h-full z-2000 bg-black-50 text-white text-4xl xl:text-5xl winner_overlay">
    <div class="flex w-full h-full items-center">
      <div class="w-full">
        Use which move?
        <div class="text-gray-900 text-sm">
        <%= for {i, card} <- clarify_moves(@state) do %>
          <div class="relative inline-block mx-4"
               phx-click="clarify-move" phx-value-i={i}
            onclick="event.preventDefault(); return false;"
          >
            <div class="absolute inset-0 cursor-pointer hover:bg-blue-400-50">
            </div>
            <%= render "show/card.html", card: card, flip: false, class: "" %>
          </div>
        <% end %>
          <div class="mt-2">
            <button phx-click="cancel-clarify" class="btn btn-gray">Cancel</button>
          </div>
        </div>
      </div>
    </div>
  </div>
<% end %>

<div class="chessboard w-full h-full absolute top-0 left-0">
  <%# Render Pieces %>
  <%= for {{x, y}, piece} <- game.board do %>
    <div
      phx-click={phx_click_value(x, y)}
      draggable='true' phx-hook="DraggableDroppable"
      onclick="event.preventDefault(); return false;"
      data-x={x}
      data-y={y}
      class={"cursor-pointer absolute piece " <> Atom.to_string(piece.type) <> " " <> Atom.to_string(piece.color)}
      style={piece_style(x, y, @flip_per)}>
    </div>
  <% end %>

  <%# Render Square Targets %>
  <%= for x <- [0, 1, 2, 3, 4] do %>
    <%= for y <- [0, 1, 2, 3, 4] do %>
      <div
        phx-click={phx_click_value(x, y)}
        phx-hook="Droppable"
        onclick="event.preventDefault(); return false;"
        data-x={x}
        data-y={y}
        class={square_class(x, y, @state, my_turn)}
        style={piece_style(x, y, @flip_per)}
      ><!--
      Blank Square
      --></div>
    <% end %>
  <% end %>
</div>
