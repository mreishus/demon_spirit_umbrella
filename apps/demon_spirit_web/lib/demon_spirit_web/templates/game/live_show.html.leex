<% game = @state.game %>

<% top_cards   = if @flip_per, do: game.cards.white, else: game.cards.black %>
<% top_player  = if @flip_per, do: @state.white, else: @state.black %>

<% bottom_cards   = if @flip_per, do: game.cards.black, else: game.cards.white %>
<% bottom_player  = if @flip_per, do: @state.black, else: @state.white %>

<% bottom_next = game.winner == nil and if @flip_per, do: game.turn == :black, else: game.turn == :white %>
<% top_next = game.winner == nil and if @flip_per, do: game.turn == :white, else: game.turn == :black %>

<% top_timer = if @flip_per, do: @state.timer.white_time_current, else: @state.timer.black_time_current %>
<% bottom_timer = if @flip_per, do: @state.timer.black_time_current, else: @state.timer.white_time_current %>

<style>

.chessboard {
  background: url(/images/bg-blue3.svg);
}

.square {
  width: 20%;
  height: 20%;
}
.move_dest {
  background-image: radial-gradient(at center center, rgba(20, 85, 30, 0.5) 19%, rgba(0, 0, 0, 0) 20%);
  z-index: 110;
}
.move_dest.also_piece {
  background-image: radial-gradient(at center center, rgba(20, 85, 30, 1.0) 19%, rgba(0, 0, 0, 0) 20%);
  z-index: 11000;
}
.move_dest:hover {
  background-color: rgba(20, 85, 30, 0.5);
  background-image: none;
}
.selected {
  background-color: green;
  opacity: 0.3;
}
.last_move {
  background-color: rgba(179, 0, 0, 0.5);
}
.piece {
  width: 20%;
  height: 20%;
  z-index: 100;
}
.piece.white.pawn {
  background: url(/images/white_pawn.svg);
  background-repeat: no-repeat;
  background-size: contain;
}
.piece.black.pawn {
  background: url(/images/black_pawn.svg);
  background-repeat: no-repeat;
  background-size: contain;
}
.piece.white.king {
  background: url(/images/white_king.svg);
  background-repeat: no-repeat;
  background-size: contain;
}
.piece.black.king {
  background: url(/images/black_king.svg);
  background-repeat: no-repeat;
  background-size: contain;
}

/* Cards */

td.card_cell {
  transition: all 0.5s ease-in-out;
}

td:after {
  content: '';
  display: block;
  margin-top: 100%;
}

td .content {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
</style>

<%= if staging?(@state) do %>
  <%= render "show/ready.html", state: @state, socket: @socket, guest: @guest %>
<% end %>

<div phx-hook="UpdateDing" class="hidden">
  <%= @state.game.moves %>
</div>

<div class="w-full p-4 text-center text-gray-800">
  <%# Main %>

  <div class="flex items-center justify-center">

    <%# Left - Chat %>
    <div class="h-64 md:h-96 xl:h-112   mr-2 md:mr-4">
      <%= live_render(@socket, DemonSpiritWeb.LiveChatIndex, 
            session: %{chat_name: @game_name, guest: @guest}, 
            id: @game_name, 
            container: {:div, class: "h-full"}
      ) %>
    </div>

    <%# Main - Board %>
    <div class=" w-64  md:w-96  xl:w-112 relative">

      <%# Top cards, hide while staging %>
      <%= if staging?(@state) do %>
        <div class="w-full h-32 mb-4"></div>
      <% else %>
        <div class="w-full h-auto flex items-center justify-center mb-4">
          <%# Top Bar  %>
          <%= for card <- top_cards do %>
            <%= render "show/card.html", card: card, flip: true, class: "mx-4" %>
          <% end %>
        </div>
      <% end %>

      <div class="h-64 w-64 md:h-96 md:w-96 xl:h-112 xl:w-112 relative">
        <%= render "show/board.html", state: @state, flip_per: @flip_per, guest: @guest, socket: @socket %>
      </div>

      <%# Bottom cards, hide while staging %>
      <%= if staging?(@state) do %>
        <div class="w-full h-32 mb-4"></div>
      <% else %>
        <div class="w-full h-auto flex items-center justify-center mt-4 relative">
          <%# Bottom Bar %>
          <%= for card <- bottom_cards do %>
            <%= render "show/card.html", card: card, flip: false, class: "mx-4" %>
          <% end %>
        </div>
      <% end %>

    </div>

    <%# Right - Side card and Players%>
    <%= if not staging?(@state) do %>
    <div class="h-64 md:h-96 xl:h-112 flex flex-col justify-between ml-2 md:ml-4">
        <div>
          <%= render "show/timer.html", timer: top_timer, active: top_next %>
          <%= if top_next do %>
            <div class="bg-blue-200 text-blue-600 font-semibold rounded mt-1">
              Next Move<br />
            </div>
          <% end %>
          <%= render "show/player.html", player: top_player %>
        </div>

        <div>
          <%= render "show/card.html",
              card: game.cards.side,
              flip: (game.turn == :black and not @flip_per) || (@flip_per and game.turn == :white),
              class: "mx-4"
          %>
          <%= if game.winner == nil do %>
            <p style="margin-top: 10px; font-size: 24px">
              <%= game.turn %>'s turn
            </p>
          <% end %>
        </div>

        <div>
          <%= render "show/player.html", player: bottom_player %>
          <%= if bottom_next do %>
            <div class="bg-blue-200 text-blue-600 font-semibold rounded mb-1">
              Next Move<br />
            </div>
          <% end %>
          <%= render "show/timer.html", timer: bottom_timer, active: bottom_next %>
        </div>

    </div>
    <% end %>

  </div>

</div>
